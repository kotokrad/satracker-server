const log = require('./utils/log.js')(module);
const moment = require('moment');
const sat = require('./utils/sat.js');
const geoip = require('geoip-lite');

const point = require('./models/point.js');
const twoline = require('./models/twoline.js');

function getPassList(req) {
  const { satellite, lat, lng } = req.query;
  return twoline.findOne({ satellite }, 'lines').then(({ lines }) => {
    let observer = { lat, lng };
    let method = 'QUERY';
    if (lat === undefined || lng === undefined) {
      const ip = req.headers['x-forwarded-for'] ||
       req.connection.remoteAddress ||
       req.socket.remoteAddress ||
       req.connection.socket.remoteAddress;
      const geo = geoip.lookup(ip);
      observer = {
        lat: geo.ll[0],
        lng: geo.ll[1],
      };
      method = 'IP';
    }
    const startDate = moment();
    const days = req.query.days && req.query.days <= 10 ? req.query.days : 10;
    const endDate = moment(startDate).add(days, 'd');
    const passList = sat.getPassList(lines, observer, startDate, endDate);
    log.info(`passlist for ${satellite} was generated by ${method}`);
    log.info(`observer: ${observer.lat}, ${observer.lng}`);
    // eslint-disable-next-line
    return passList.map((p) => {
      return {
        s: sat.toShortDate(p.start),
        mel: p.mel,
      };
    });
  });
}

function getTrack(req) {
  const satellite = req.query.satellite;
  const currentShortDate = sat.toShortDate(moment());
  let timestamp = Number(req.query.timestamp);
  let points = Number(req.query.points);
  if (!timestamp || timestamp < 1000000000 || timestamp > 9000000000) {
    timestamp = currentShortDate - (6480 / 4);
  }
  if (!points || points < 1 || points > 6480) {
    points = 6480;
  }
  return point.find({
    satellite,
    timestamp: { $gte: timestamp },
  }, 'lat lng height timestamp', {
    sort: { timestamp: 1 },
    limit: points,
    // eslint-disable-next-line
  }).then(track => track.map((p) => {
    return {
      lat: p.lat,
      lng: p.lng,
      h: p.height,
      t: p.timestamp,
    };
  }));
}

module.exports = {
  getPassList,
  getTrack,
};
